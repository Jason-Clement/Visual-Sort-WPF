<Window x:Class="VisualSortWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:VisualSortWPF"
        Title="MainWindow" Height="600" Width="800" MinHeight="600" MinWidth="800" Loaded="Window_Loaded" Closing="Window_Closing">
    <Window.Resources>
        <ResourceDictionary>
            <SolidColorBrush x:Key="BorderBrush" Color="#FF6E8ED8" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ExpanderResourceDictionary.xaml"/>
                <ResourceDictionary Source="GroupBoxResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Background="#FFD6DFF7">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="160" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Horizontal" Height="20" VerticalAlignment="Top" Margin="7,4,7,0">
            <StackPanel.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Bottom" />
                </Style>
            </StackPanel.Resources>
            <TextBlock Text="Visual Sort" Name="_AlgorithmNameTextBlock"  Margin="0,0,10,0" FontSize="14" FontWeight="Bold" />
            <TextBlock Text="Comparisons:" />
            <TextBlock Text="0" Name="_CompareCountTextBlock" Margin="5,0,10,0" FontSize="13" FontWeight="Bold" />
            <TextBlock Text="Swaps:" />
            <TextBlock Text="0" Name="_SwapCountTextBlock" Margin="5,0,10,0" FontSize="13" FontWeight="Bold" />
        </StackPanel>
        <Border Grid.Column="1" Grid.Row="0" BorderThickness="1" BorderBrush="{StaticResource BorderBrush}" Margin="5,25,5,15" VerticalAlignment="Stretch">
                <Canvas Name="_Canvas" SizeChanged="_Canvas_SizeChanged" Background="White" />
            </Border>
            <Canvas Height="10" Grid.Column="1" Name="_IndicatorCanvas" VerticalAlignment="Bottom" Margin="5" />
        <StackPanel Grid.Column="0" Grid.Row="0">
            <StackPanel.Resources>
                <Style TargetType="Expander" BasedOn="{StaticResource Expander}">
                    <Setter Property="Height" Value="Auto"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="VerticalAlignment" Value="Top"/>
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="IsExpanded" Value="false"/>
                    <Setter Property="Padding" Value="0,5"/>
                    <Setter Property="Margin" Value="0,0,0,1"/>
                    <Setter Property="ExpandDirection" Value="Down"/>
                    <EventSetter Event="Expanded" Handler="Expander_Expanded"/>
                </Style>
                <Style TargetType="GroupBox" BasedOn="{StaticResource GroupBox}">
                    <Setter Property="Height" Value="Auto"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="VerticalAlignment" Value="Top"/>
                    <Setter Property="Width" Value="Auto"/>
                </Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Padding" Value="15,1,5,1"/>
                    <EventSetter Event="MouseUp" Handler="SortTextBlock_MouseUp" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType=Expander}}" Value="true"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush>
                                        <GradientStop Color="#FFC8D5F7" Offset="0.0" />
                                        <GradientStop Color="White" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>
            <Border Margin="7" BorderBrush="{StaticResource BorderBrush}">
                <StackPanel>
                    <Expander Header="Exchange Sorts" Name="_ExchangeExpander" ExpandDirection="Down">
                        <StackPanel>
                            <TextBlock>Bubble Sort</TextBlock>
                            <TextBlock>Cocktail Sort</TextBlock>
                            <TextBlock>Odd-Even Sort</TextBlock>
                            <TextBlock>Comb Sort</TextBlock>
                            <TextBlock>Gnome Sort</TextBlock>
                            <TextBlock>Quick Sort</TextBlock>
                            <TextBlock>3-Way Quick Sort</TextBlock>
                        </StackPanel>
                    </Expander>
                    <Expander Header="Selection Sorts" Name="_SelectionExpander">
                        <StackPanel>
                            <TextBlock>Selection Sort</TextBlock>
                            <TextBlock>Selection Cocktail Sort</TextBlock>
                            <TextBlock>Heap Sort</TextBlock>
                        </StackPanel>
                    </Expander>
                    <Expander Header="Insertion Sorts" Name="_InsertionExpander">
                        <StackPanel>
                            <TextBlock>Insertion Sort</TextBlock>
                            <TextBlock>Shell Sort</TextBlock>
                        </StackPanel>
                    </Expander>
                    <Expander Header="Merge Sorts" Name="_MergeExpander">
                        <StackPanel>
                            <TextBlock>Merge Sort</TextBlock>
                            <TextBlock>Strand Sort</TextBlock>
                        </StackPanel>
                    </Expander>
                    <Expander Header="Stupid Sorts" Name="_StupidExpander" Margin="0">
                        <StackPanel>
                            <TextBlock>Stooge Sort</TextBlock>
                        </StackPanel>
                    </Expander>
                </StackPanel>
            </Border>
            <Border Margin="7,0,7,7" BorderBrush="{StaticResource BorderBrush}">
                <GroupBox Header="Control" Name="_ControlGroupBox2" Padding="7,7,7,7">
                    <GroupBox.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Padding" Value="4,0,4,0" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                        </Style>
                    </GroupBox.Resources>
                    <StackPanel>
                        <Button Height="20" Margin="0,0,0,4" Name="_StopButton" Click="_StopButton_Click" Visibility="Collapsed">
                            <Grid HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="100" />
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="0" Source="/VisualSortWPF;component/Images/stop16.png" Height="16" />
                                <TextBlock Grid.Column="1" Padding="5,0,0,0" VerticalAlignment="Center" Visibility="Visible">Stop Sorting</TextBlock>
                            </Grid>
                        </Button>
                        <Button Height="20" Margin="0,0,0,4" Name="_PlayButton">
                            <Grid HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="100" />
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="0" Source="/VisualSortWPF;component/Images/forward16.png" Height="16" />
                                <TextBlock Grid.Column="1" Padding="5,0,0,0" VerticalAlignment="Center">Sort Again</TextBlock>
                            </Grid>
                        </Button>
                        <Button Height="20" Name="_ScrambleButton" Click="_ScambleButton_Click">
                            <Grid HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="100" />
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="0" Source="/VisualSortWPF;component/Images/refresh16.png" Height="16" />
                                <TextBlock Grid.Column="1" Padding="5,0,0,0" VerticalAlignment="Center">Reset Bars</TextBlock>
                            </Grid>
                        </Button>
                    </StackPanel>
                </GroupBox>
            </Border>
            <Border Margin="7,0,7,7" BorderBrush="{StaticResource BorderBrush}">
                <Expander Header="Options" Name="_OptionsGroupBox" Padding="7,7,7,5" IsExpanded="True">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="Label">
                                <Setter Property="Padding" Value="0,0,7,0" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                            <Style TargetType="local:NumericUpDown">
                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                                <Setter Property="TextAlignment" Value="Right" />
                                <Setter Property="Margin" Value="0,0,0,2" />
                            </Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Label Grid.Column="0" Grid.Row="0">Bar Count</Label>
                        <local:NumericUpDown Grid.Column="1" Grid.Row="0" x:Name="_BarCountBox" Value="250"
                                             Minimum="10" ValueChanged="BarCountBoxChanged" />
                        <Label Grid.Column="0" Grid.Row="1">Speed</Label>
                        <local:NumericUpDown Grid.Column="1" Grid.Row="1" x:Name="_SpeedBox" Value="90"
                                             Minimum="1" ValueChanged="SpeedBoxChanged" />
                        <StackPanel Grid.Row="2" Grid.ColumnSpan="2">
                            <Label>Initial Condition</Label>
                            <ComboBox SelectedIndex="0" SelectionChanged="ComboBox_SelectionChanged_1">
                                <ComboBoxItem Content="Random" />
                                <ComboBoxItem Content="Reversed" />
                                <ComboBoxItem Content="Nearly Sorted" />
                                <ComboBoxItem Content="Few Unique" />
                            </ComboBox>
                        </StackPanel>
                    </Grid>
                </Expander>
            </Border>
            <Border Margin="7,0,7,7" BorderBrush="{StaticResource BorderBrush}">
                <GroupBox Header="Sound Options" Name="_SoundOptionsGroupBox" Padding="7,7,7,5">
                    <StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="GroupBox">
                            </Style>
                            <Style TargetType="Label">
                                <Setter Property="Padding" Value="0,0,7,0" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                            <Style TargetType="local:NumericUpDown">
                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                                <Setter Property="TextAlignment" Value="Right" />
                                <Setter Property="Margin" Value="0,0,0,2" />
                            </Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </StackPanel.Resources>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0">Type</Label>
                            <ComboBox Grid.Column="1" SelectionChanged="ComboBox_SelectionChanged">
                                <ComboBoxItem Content="Midi" IsSelected="True" />
                                <ComboBoxItem Content="Sine Wave" />
                            </ComboBox>
                        </Grid>
                        <GroupBox Header="Play Sound On" ToolTip="Generate sound when 2 bars are swapped and/or compared.">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <CheckBox Name="_SO_PlayOnSwap" IsChecked="False" Margin="0,0,4,0" Checked="_SO_PlayOnSwap_Checked" Unchecked="_SO_PlayOnSwap_Checked">Swap</CheckBox>
                                <CheckBox Name="_SO_PlayOnCompare" IsChecked="True" Margin="4,0,0,0" Checked="_SO_PlayOnCompare_Checked" Unchecked="_SO_PlayOnCompare_Checked">Compare</CheckBox>
                            </StackPanel>
                        </GroupBox>
                        <StackPanel Name="_MidiOptions">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Label Grid.Column="0" Grid.Row="0">Instrument</Label>
                                <local:NumericUpDown Grid.Column="1" Grid.Row="0" x:Name="_MidiInstrument" Margin="0,4,0,0"
                                                     Maximum="127" Minimum="0" Value="0" ValueChanged="_MidiInstrument_ValueChanged" />
                            </Grid>
                        </StackPanel>
                        <StackPanel Name="_SineWaveOptions" Visibility="Collapsed">
                        <GroupBox Header="Frequency" ToolTip="The frequency determines the ">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"  />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Grid.Column="0" Padding="0" HorizontalAlignment="Center">Minimum</Label>
                                <local:NumericUpDown Grid.Row="1" Grid.Column="0" x:Name="_MinFrequencyBox" Value="400"
                                             Minimum="100" Maximum="3000" Change="100" Margin="0,0,2,0" ValueChanged="_MinFrequencyBox_ValueChanged" />
                                <Label Grid.Row="0" Grid.Column="1" Padding="0" HorizontalAlignment="Center">Maximum</Label>
                                <local:NumericUpDown Grid.Row="1" Grid.Column="1" x:Name="_MaxFrequencyBox" Value="1600"
                                             Minimum="400" Maximum="3000" Change="100" Margin="2,0,0,0" ValueChanged="_MaxFrequencyBox_ValueChanged" />
                            </Grid>
                        </GroupBox>
                        <Grid Margin="0,4,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Label Grid.Column="0" VerticalAlignment="Center" ToolTip="The number of notes to play simultaneously.">Concurrency</Label>
                            <local:NumericUpDown Grid.Column="1" Width="50" x:Name="_ConcurrentNotes" Value="30"
                                                 Maximum="15" Minimum="1" ValueChanged="_ConcurrentNotes_ValueChanged"
                                                 ToolTip="The number of notes to play simultaneously." />
                            </Grid>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </Border>
            <StackPanel.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF7AA1E6" Offset="0" />
                    <GradientStop Color="#FF6375D6" Offset="1" />
                </LinearGradientBrush>
            </StackPanel.Background>
        </StackPanel>
    </Grid>
</Window>
